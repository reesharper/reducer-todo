{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\web36\\\\reducer-todo\\\\todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport { reducer, initialState } from './reducers/reducer';\nimport { setTodo } from './actions/actions';\n\nconst App = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); // handleToggleItem = (itemId)=>{\n  //   this.setState({\n  //     todos:this.state.todos.map(item=>{\n  //       if(item.id === itemId) {\n  //         return {\n  //           ...item,\n  //           completed: !item.completed\n  //         }\n  //       } else {\n  //         return item;\n  //       }\n  //     })\n  //   })\n  // }\n  // handleAddItem = (name) => {\n  //   this.setState({\n  //     todos: [...this.state.todos, {\n  //       name: name,\n  //       id: this.state.todos.length,\n  //       completed: false\n  //     }]\n  //   })\n  // }\n  // clearItems = () => {\n  //   this.setState({\n  //     todos: this.state.todos.filter(item=> (!item.completed))\n  //   });\n  // }\n\n  const handleChanges = e => {\n    dispatch(setTodo(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoApp\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"item\",\n          value: state.newTodo,\n          onChange: handleChanges\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            dispatch(setTodo(state.newTodo));\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: state.map(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/web36/reducer-todo/todo/src/App.js"],"names":["React","useReducer","ReactDOM","reducer","initialState","setTodo","App","state","dispatch","handleChanges","e","target","value","newTodo","map","item","rootElement","document","getElementById","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,oBAAtC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,OAAD,EAAUC,YAAV,CAApC,CAFgB,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,aAAa,GAAGC,CAAC,IAAI;AACzBF,IAAAA,QAAQ,CAACH,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,KAAK,EAAEL,KAAK,CAACM,OAHb;AAIA,UAAA,QAAQ,EAAEJ;AAJV;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACA,UAAA,OAAO,EAAE,MAAM;AACbD,YAAAA,QAAQ,CAACH,OAAO,CAACE,KAAK,CAACM,OAAP,CAAR,CAAR;AACD,WAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE;AAAA,kBAAIN,KAAK,CAACO,GAAN,CAAUC,IAAV;AAAJ;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA9DD;;GAAMT,G;;KAAAA,G;AAgEN,MAAMU,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAhB,QAAQ,CAACiB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBH,WAAzB;AAEA,eAAeV,GAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport { reducer, initialState } from './reducers/reducer';\nimport { setTodo } from './actions/actions';\n\n\nconst App = () => {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // handleToggleItem = (itemId)=>{\n  //   this.setState({\n  //     todos:this.state.todos.map(item=>{\n  //       if(item.id === itemId) {\n  //         return {\n  //           ...item,\n  //           completed: !item.completed\n  //         }\n  //       } else {\n  //         return item;\n  //       }\n  //     })\n  //   })\n  // }\n\n  // handleAddItem = (name) => {\n  //   this.setState({\n  //     todos: [...this.state.todos, {\n  //       name: name,\n  //       id: this.state.todos.length,\n  //       completed: false\n  //     }]\n  //   })\n  // }\n\n  // clearItems = () => {\n  //   this.setState({\n  //     todos: this.state.todos.filter(item=> (!item.completed))\n  //   });\n  // }\n\n  const handleChanges = e => {\n    dispatch(setTodo(e.target.value));\n  };\n\n  return (\n    <div className=\"TodoApp\">\n        <div className=\"Header\">\n          <h1>Todo List</h1>\n          <form>\n            <input \n            type=\"text\"\n            name=\"item\"\n            value={state.newTodo}\n            onChange={handleChanges}\n            />\n            <button\n            onClick={() => {\n              dispatch(setTodo(state.newTodo));\n            }}>\n              Add\n            </button>\n          </form>\n          <p>{state.map(item)}</p>\n        </div>\n\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}